#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

compile '*' do
  if item.binary?
    # don’t filter binary items
  else
    case item[:extension]
    when /.*coffee/
      filter :coffeescript
    when /.*less/
      filter :less
    when /.*slim/
      filter :slim
    when /.*css/, /.*html/, /.*js/
      # do nothing
    else
      raise "no compile rule for #{item.identifier.chop}.#{item[:extension]}"
    end
    return if item[:no_layout]
    case item[ :extension ]
    when /.*slim/
      layout "default"
    end
  end
end

# route 'vendor/*' do end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    case item[:extension]
    when /.*coffee/
      "#{item.identifier.chop}.#{item[:extension]}".sub /(.*)\.coffee/, '\1.js'
    when /.*less/
      "#{item.identifier.chop}.#{item[:extension]}".sub /(.*)\.less/, '\1.css'
    when /.*html/, /.*slim/
      item.identifier + 'index.html'
    when /.*css/, /.*html/, /.*js/
      "#{item.identifier.chop}.#{item[:extension]}"
    else
      raise "no route rule for #{item.identifier.chop}.#{item[:extension]}"
    end
  end
end

layout '*', :slim
